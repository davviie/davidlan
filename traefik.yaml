# traefik

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:${TRAEFIK_HTTP_PORT}" # HTTP port from .env
      - "--entrypoints.websecure.address=:${TRAEFIK_HTTPS_PORT}" # HTTPS port from .env
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${TRAEFIK_ACME_EMAIL}" # Email from .env
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "${TRAEFIK_HTTP_PORT}:${TRAEFIK_HTTP_PORT}" # HTTP
      - "${TRAEFIK_HTTPS_PORT}:${TRAEFIK_HTTPS_PORT}" # HTTPS
      - "${TRAEFIK_DASHBOARD_PORT}:${TRAEFIK_DASHBOARD_PORT}" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "${DOCKERDATA}/traefik/letsencrypt:/letsencrypt" # Dynamic path for letsencrypt
    environment:
      - TRAEFIK_HTTP_PORT=${TRAEFIK_HTTP_PORT}
      - TRAEFIK_HTTPS_PORT=${TRAEFIK_HTTPS_PORT}
      - TRAEFIK_ACME_EMAIL=${TRAEFIK_ACME_EMAIL}
      - DOMAIN=${DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)" # Dynamic domain
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"

  #backend:
  #  build: ./backend # Path to your Golang backend
  #  container_name: golang-backend
  #  restart: unless-stopped
  #  labels:
  #    - "traefik.enable=true"
  #    - "traefik.http.routers.backend.rule=Host(`api.example.com`)" # Replace with your domain
  #    - "traefik.http.routers.backend.entrypoints=websecure"
  #    - "traefik.http.routers.backend.tls=true"
  #    - "traefik.http.routers.backend.tls.certresolver=myresolver"
  #    - "traefik.http.services.backend.loadbalancer.server.port=8080" # Replace with your backend port  docker network ls  docker network ls