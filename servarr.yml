networks:
  default:
    name: dockernet
    external: true
    
services:
  overseerr:
    image: linuxserver/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    ports:
      - "${OVERSEERR_PORT}:${OVERSEERR_PORT}"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDATA}/servarr/overseerr:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr.rule=Host(`${DOMAIN}`) && PathPrefix(`/overseerr`)"
      - "traefik.http.routers.overseerr.entrypoints=websecure"
      - "traefik.http.routers.overseerr.tls=true"
      - "traefik.http.routers.overseerr.tls.certresolver=myresolver"

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    ports:
      - "${SONARR_PORT}:${SONARR_PORT}"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDATA}/servarr/sonarr:/config
      - ${MEDIA}/TV:/tv
      - ${TORRENTS}:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`${DOMAIN}`) && PathPrefix(`/sonarr`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    ports:
      - "${RADARR_PORT}:${RADARR_PORT}"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDATA}/servarr/radarr:/config
      - ${MEDIA}/movie:/movies
      - ${TORRENTS}:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`${DOMAIN}`) && PathPrefix(`/radarr`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    ports:
      - "${PROWLARR_PORT}:${PROWLARR_PORT}"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDATA}/servarr/prowlarr:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`${DOMAIN}`) && PathPrefix(`/prowlarr`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.tls=true"
      - "traefik.http.routers.prowlarr.tls.certresolver=myresolver"

  mylar:
    image: linuxserver/mylar3:latest
    container_name: mylar
    restart: unless-stopped
    ports:
      - "${MYLAR_PORT}:${MYLAR_PORT}"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDATA}/servarr/mylar:/config
      - ${MEDIA}/comics:/comics
      - ${TORRENTS}:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mylar.rule=Host(`${DOMAIN}`) && PathPrefix(`/mylar`)"
      - "traefik.http.routers.mylar.entrypoints=websecure"
      - "traefik.http.routers.mylar.tls=true"
      - "traefik.http.routers.mylar.tls.certresolver=myresolver"

  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    ports:
      - "${BAZARR_PORT}:${BAZARR_PORT}"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDATA}/servarr/bazarr:/config
      - ${MEDIA}/TV:/tv
      - ${MEDIA}/movie:/movies
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`${DOMAIN}`) && PathPrefix(`/bazarr`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls=true"
      - "traefik.http.routers.bazarr.tls.certresolver=myresolver"

  lazylibrarian:
    image: linuxserver/lazylibrarian:latest
    container_name: lazylibrarian
    restart: unless-stopped
    ports:
      - "${LAZYLIBRARIAN_PORT}:${LAZYLIBRARIAN_PORT}"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDATA}/servarr/lazylibrarian:/config
      - ${MEDIA}/books:/books
      - ${TORRENTS}:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lazylibrarian.rule=Host(`${DOMAIN}`) && PathPrefix(`/lazylibrarian`)"
      - "traefik.http.routers.lazylibrarian.entrypoints=websecure"
      - "traefik.http.routers.lazylibrarian.tls=true"
      - "traefik.http.routers.lazylibrarian.tls.certresolver=myresolver"

  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    restart: unless-stopped
    ports:
      - "${LIDARR_PORT}:${LIDARR_PORT}"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDATA}/servarr/lidarr:/config
      - ${MEDIA}/music:/music
      - ${TORRENTS}:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lidarr.rule=Host(`${DOMAIN}`) && PathPrefix(`/lidarr`)"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.routers.lidarr.tls=true"
      - "traefik.http.routers.lidarr.tls.certresolver=myresolver"

  whisparr:
    image: hotio/whisparr:latest
    container_name: whisparr
    restart: unless-stopped
    ports:
      - "${WHISPARR_PORT}:${WHISPARR_PORT}"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDATA}/servarr/whisparr:/config
      - ${MEDIA}/adult:/adult
      - ${TORRENTS}:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whisparr.rule=Host(`${DOMAIN}`) && PathPrefix(`/whisparr`)"
      - "traefik.http.routers.whisparr.entrypoints=websecure"
      - "traefik.http.routers.whisparr.tls=true"
      - "traefik.http.routers.whisparr.tls.certresolver=myresolver"

  tautulli:
    image: ghcr.io/tautulli/tautulli
    container_name: tautulli
    restart: unless-stopped
    volumes:
      - ${DOCKERDATA}:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Montreal
    ports:
      - 8181:8181

  nzbget: #usenet download agent
    image: ghcr.io/linuxserver/nzbget
    container_name: nzbget
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKERDATA/nzbget:/config
      - $MEDIADIR/usenet:/media/usenet
    ports:
      - 6789:6789
    restart: unless-stopped