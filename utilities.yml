networks:
  traefik_network:
    driver: bridge
    
services:
  # Portainer - Docker Management UI
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "${PORTAINER_PORT}:${PORTAINER_PORT}" # Portainer Web UI
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKERDATA}/portainer:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls=true"

  # Portainer Agent - For Remote Portainer Management
  portainer-agent:
    image: portainer/agent:latest
    container_name: portainer-agent
    restart: unless-stopped
    ports:
      - "${PORTAINER_AGENT_PORT}:${PORTAINER_AGENT_PORT}" # Portainer Agent Port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      -${DOCKERDATA}/volumes:ls/volumes
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer-agent.rule=Host(`agent.${DOMAIN}`)"
      - "traefik.http.routers.portainer-agent.entrypoints=websecure"
      - "traefik.http.routers.portainer-agent.tls=true"

  # Watchtower - Automatic Updates for Containers
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    environment:
      - WATCHTOWER_CLEANUP=true # Remove old images
      - WATCHTOWER_POLL_INTERVAL=3600 # Check every hour
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.watchtower.rule=Host(`watchtower.${DOMAIN}`)"
      - "traefik.http.routers.watchtower.entrypoints=websecure"
      - "traefik.http.routers.watchtower.tls=true"

  # Alpine - Lightweight Linux Container
  alpine:
    image: alpine:latest
    container_name: alpine
    restart: unless-stopped
    command: tail -f /dev/null # Keeps the container running
    tty: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alpine.rule=Host(`alpine.${DOMAIN}`)"
      - "traefik.http.routers.alpine.entrypoints=websecure"
      - "traefik.http.routers.alpine.tls=true"

  # FileZilla - FTP Client
  filezilla:
    image: ghcr.io/linuxserver/filezilla:latest
    container_name: filezilla
    restart: unless-stopped
    ports:
      - "${FILEZILLA_PORT}:${FILEZILLA_PORT}" # FileZilla Web UI
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDATA}/filezilla/config:/config
      - ${DOCKERDATA}/filezilla/data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.filezilla.rule=Host(`filezilla.${DOMAIN}`)"
      - "traefik.http.routers.filezilla.entrypoints=websecure"
      - "traefik.http.routers.filezilla.tls=true"

  # Netdata - System Monitoring
  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    restart: unless-stopped
    ports:
      - "${NETDATA_PORT}:${NETDATA_PORT}" # Netdata Web UI
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKERDATA}/netdata/config:/etc/netdata
      - ${DOCKERDATA}/netdata/lib:/var/lib/netdata
      - ${DOCKERDATA}/netdata/cache:/var/cache/netdata
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.netdata.rule=Host(`netdata.${DOMAIN}`)"
      - "traefik.http.routers.netdata.entrypoints=websecure"
      - "traefik.http.routers.netdata.tls=true"

  # Nginx - Reverse Proxy
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT}:80"  # HTTP
      - "${NGINX_HTTPS_PORT}:443" # HTTPS
    volumes:
      - ${DOCKERDATA}/nginx/conf:/etc/nginx/conf.d
      - ${DOCKERDATA}/nginx/html:/usr/share/nginx/html
      - ${DOCKERDATA}/nginx/logs:/var/log/nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`nginx.${DOMAIN}`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls=true"

  # Uptime Kuma - Monitoring and Status Page
  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    restart: unless-stopped
    ports:
      - "${UPTIME_KUMA_PORT}:${UPTIME_KUMA_PORT}" # Uptime Kuma Web UI
    volumes:
      - ${DOCKERDATA}/uptime-kuma/data:/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uptime-kuma.rule=Host(`uptime.${DOMAIN}`)"
      - "traefik.http.routers.uptime-kuma.entrypoints=websecure"
      - "traefik.http.routers.uptime-kuma.tls=true"

  # Vaultwarden - Self-Hosted Password Manager
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    ports:
      - "${VAULTWARDEN_PORT}:80" # Vaultwarden Web UI
    volumes:
      - ${DOCKERDATA}/vaultwarden/data:/data
    environment:
      - ADMIN_TOKEN=${VAULTWARDEN_ADMIN_TOKEN} # Replace with a secure admin token
      - WEBSOCKET_ENABLED=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`vaultwarden.${DOMAIN}`)"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls=true"

  # Heimdall - Application Dashboard
  heimdall:
    image: linuxserver/heimdall:latest
    container_name: heimdall
    restart: unless-stopped
    ports:
      - "${HEIMDALL_PORT}:80" # Heimdall Web UI
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDATA}/heimdall/config:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.heimdall.rule=Host(`heimdall.${DOMAIN}`)"
      - "traefik.http.routers.heimdall.entrypoints=websecure"
      - "traefik.http.routers.heimdall.tls=true"

  # Homepage - Customizable Start Page
  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    restart: unless-stopped
    ports:
      - "${HOMEPAGE_PORT}:${HOMEPAGE_PORT}" # Homepage Web UI
    volumes:
      - ${DOCKERDATA}/homepage/config:/app/config
      - ${DOCKERDATA}/homepage/data:/app/data
    environment:
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homepage.rule=Host(`homepage.${DOMAIN}`)"
      - "traefik.http.routers.homepage.entrypoints=websecure"
      - "traefik.http.routers.homepage.tls=true"